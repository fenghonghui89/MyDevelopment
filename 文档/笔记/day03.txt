day03
反向传值
方法1：子界面保存主界面的对象（彼此特别紧密才能使用）
方法2：委托（常用、重点）

委托：（苹果规定的一种设计模式，必须按规定书写）
一.动态类型、静态类型、类型转换
1.类型转换不会转换对象，转换的是指针变量类型
2.静态、动态类型 仅仅是帮助拼写检查，不会影响运行
3.=
	等号左边：变量类型只会影响编译前的拼写检查，你把它看成是什么
	等号右边：真正的对象（看类文件），真正的运行时执行代码的人，它真正是什么

二.自定义委托实现的反向传值
委托方（子界面）
（可能：在子界面的.m文件上@class自身）
1>定义一个委托协议（作用：1.询问不能自己完成的事情，2.做汇报）
	1]协议名称必须为类名去掉VC，加Delegate
	  例：TRBloodTypeViewController -> TRBloodTypeDelegate
	2]协议内的所有消息必须传送自己为第一参数，方法名的第一部分必须以类名去掉前缀后第一字母改小写开头
	  例：didSelectBloodType -> bloodTypeViewController:子界面类型 didSelectBloodType:参数
2>定义遵守了协议的id类型的属性 id<XXXxxxXxxxDelegate> delegate;
	1]内存管理写 assign/weak
3>在合适的时机，调用委托协议内的消息，并且传送自己的地址到第一参数

被委托方（主界面以及潜在的其他会调用子界面的界面）
1>把主界面的地址传递到子界面的delegate属性
2>声明自己遵循委托方协议
3>实现委托方协议内的消息（委托方的指针暂时没用；接收子界面传递过来的值）